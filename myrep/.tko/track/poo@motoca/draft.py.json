{
    "patches": [
        {
            "label": "2025-10-22_22-21-54",
            "content": "@@ -1,40 +0,0 @@\n-epokwefpokefpokwefokwfok%5B%0A%0A    ad%0A    %0A%5D\n",
            "lines": "0"
        },
        {
            "label": "2025-10-23_17-48-10",
            "content": "@@ -1,1215 +1,40 @@\n-class Pessoa:%0A    def _init_(self, nome : str, age: int):%0A        self.__nome = nome %0A        self.__age = age %0A%0A    def getAge(self):%0A        return self.__age%0A    def getName(self):%0A        return self.__name %0A    def _str_(self):%0A        return f%22%7Bself._name%7D : %7Bself._age%7D%22%0A    %0Aclass Motoca:%0A    def _init_(self):%0A        self.__potencia : int = 1%0A        self.__time : int = 0%0A        self.__pessoa = None%0A%0A    def _str_(self):%0A        return f%22\n+epokwefpokef\n po\n+k\n we\n-r:(%7Bself._potencia%7D), time:(%7Bself.time%7D), person:(%7Bself._pessoa%7D)%22%0A        %0A    def inserir(self, pessoa: Pessoa) -%3E bool:%0A        if self.__pessoa is not None:%0A            print(%22fail: busy motocilce%22)%0A        %0A        self.__pessoa = pessoa %0A        return%0A    %0A    def remover(self):%0A        if self.__pessoa in None:%0A            print(%22fail: empty motocycle%22)%0A            return None %0A        pessoa_removida = self.__pessoa%0A        self.__pessoa = None%0A        return pessoa_removida%0A    %0A    def buyTime(self, time: int):%0A        self.__time += time %0A    %0A    def drive(self, timer: int ):%0A        if self.__time == 0 :%0A            print(%22fail: buy time first%22)%0A        elif  self.__pessoa is None:%0A            print(%22fail: empty motocycle%22)%0A        elif\n+fokwfok%5B%0A%0A    ad%0A    %0A%5D\n",
            "lines": "5"
        },
        {
            "label": "2025-10-23_18-11-31",
            "content": "@@ -1124,38 +1124,22 @@\n         \n-    return%0A        \n+el\n if \n+ \n self.__p\n@@ -1208,1266 +1208,8 @@\n     \n-    return%0A        if self.__pessoa.getAge() %3E 10:%0A            print(%22fail: too old to drive%22)%0A            return%0A        if time %3E= self.__time:%0A            print(f%22fail: time finished after %7Bself.__time%7D minutes%22)%0A            self.__time = 0%0A        else:%0A            self.__time -= time%0A%0A    def honk(self):%0A        return %22P%22 + (%22e%22 * self.__potencia) + %22m%22%0A%0Adef main():%0A    motoca = Motoca()%0A    while True:%0A        line = input()%0A        print(%22$%22 + line)%0A        args = line.split()%0A%0A        if args%5B0%5D == %22end%22:%0A            break%0A        elif args%5B0%5D == %22init%22:%0A            power = int(args%5B1%5D)%0A            motoca = Motoca(power)%0A        elif args%5B0%5D == %22show%22:%0A            print(motoca)%0A        elif args%5B0%5D == %22buy%22:%0A            time = int(args%5B1%5D)%0A            motoca.buyTime(time)%0A        elif args%5B0%5D == %22enter%22:%0A            name = args%5B1%5D%0A            age = int(args%5B2%5D)%0A            pessoa = Pessoa(name, age)%0A            motoca.inserir(pessoa)%0A        elif args%5B0%5D == %22leave%22:%0A            pessoa = motoca.remover()%0A            if pessoa is not None:%0A                print(pessoa)%0A        elif args%5B0%5D == %22drive%22:%0A            tempo = int(args%5B1%5D)%0A            motoca.drive(tempo)%0A        elif args%5B0%5D == %22honk%22:%0A            print(motoca.honk())%0Amain()\n+elif\n",
            "lines": "45"
        },
        {
            "label": "2025-10-23_19-31-46",
            "content": "@@ -1,34 +1,4 @@\n-from xxsubtype import bench %0A%0A\n clas\n@@ -71,16 +71,16 @@\n .__n\n-a\n+o\n me = n\n-a\n+o\n me %0A\n@@ -154,21 +154,16 @@\n f.__age%0A\n-    %0A\n     def \n@@ -201,29 +201,24 @@\n elf.__name %0A\n-    %0A\n     def _str\n@@ -255,17 +255,19 @@\n f._name%7D\n-:\n+ : \n %7Bself._a\n@@ -313,24 +313,8 @@\n self\n-, potencia = 1, \n ):%0A \n@@ -339,18 +339,18 @@\n ncia\n+ \n : \n-potencia\n+int = 1\n %0A   \n@@ -367,16 +367,22 @@\n __time :\n+ int =\n  0%0A     \n@@ -401,22 +401,8 @@\n ssoa\n-: Pessoa %7CNone\n  = N\n@@ -431,50 +431,8 @@\n f):%0A\n-        if self.__pessoa is not None:%0A    \n     \n@@ -450,33 +450,32 @@\n f%22power:(%7Bself._\n-_\n potencia%7D), time\n@@ -474,34 +474,32 @@\n %7D), time:(%7Bself.\n-__\n time%7D), person:(\n@@ -503,130 +503,14 @@\n n:(%7B\n-str(\n self._\n-_pessoa)%7D)%22%0A        else:%0A            return f%22power:(%7Bself.__potencia%7D), time:(%7Bself.__time%7D), person:(%7Bself.__\n pess\n@@ -639,29 +639,28 @@\n l: busy moto\n-rcycl\n+cilc\n e%22)%0A        \n@@ -663,24 +663,8 @@\n     \n-    return False\n %0A   \n@@ -753,33 +753,33 @@\n  self.__pessoa i\n-s\n+n\n  None:%0A         \n@@ -796,33 +796,32 @@\n fail: empty moto\n-r\n cycle%22)%0A        \n@@ -835,35 +835,18 @@\n urn None\n-%0A        else:%0A   \n  \n+%0A\n         \n@@ -881,28 +881,24 @@\n soa%0A        \n-    \n self.__pesso\n@@ -906,20 +906,16 @@\n  = None%0A\n-    \n         \n@@ -1030,24 +1030,25 @@\n e(self, time\n+r\n : int ):%0A   \n@@ -1071,16 +1071,17 @@\n ime == 0\n+ \n :%0A      \n@@ -1204,17 +1204,16 @@\n pty moto\n-r\n cycle%22)%0A\n",
            "lines": "90"
        },
        {
            "label": "2025-10-23_19-58-40",
            "content": "@@ -1,8 +1,36 @@\n+from xxsubtype import bench \n %0A%0Aclass \n",
            "lines": "98"
        },
        {
            "label": "2025-10-23_19-59-12",
            "content": "@@ -1,2726 +1,46 @@\n-%0A%0Aclass Pessoa:%0A    def _init_(self, name : str, age: int):%0A        self.__name = name %0A        self.__age = age %0A%0A    def getAge(self):%0A        return self.__age%0A    %0A    def getName(self):%0A        return self.__name %0A    %0A    def _str_(self):%0A        return f%22%7Bself._name%7D:%7Bself._age%7D%22%0A    %0Aclass Motoca:%0A    def _init_(self, potencia = 1, ):%0A        self.__potencia: potencia%0A        self.__time : 0%0A        self.__pessoa: Pessoa %7CNone = None%0A%0A    def _str_(self):%0A        if self.__pessoa is not None:%0A            return f%22power:(%7Bself.__potencia%7D), time:(%7Bself.__time%7D), person:(%7Bstr(self.__pessoa)%7D)%22%0A        else:%0A            return f%22power:(%7Bself.__potencia%7D), time:(%7Bself.__time%7D), person:(%7Bself.__pessoa%7D)%22%0A        %0A    def inserir(self, pessoa: Pessoa) -%3E bool:%0A        if self.__pessoa is not None:%0A            print(%22fail: busy motorcycle%22)%0A            return False%0A        self.__pessoa = pessoa %0A        return%0A    %0A    def remover(self):%0A        if self.__pessoa is None:%0A            print(%22fail: empty motorcycle%22)%0A            return None%0A        else:%0A            pessoa_removida = self.__pessoa%0A            self.__pessoa = None%0A            return pessoa_removida%0A    %0A    def buyTime(self, time: int):%0A        self.__time += time %0A    %0A    def drive(self, time: int ):%0A        if self.__time == 0:%0A            print(%22fail: buy time first%22)%0A            return%0A        if self.__pessoa is None:%0A            print(%22fail: empty motorcycle%22)%0A            return%0A        if self.__pessoa.getAge() %3E 10:%0A            print(%22fail: too old to drive%22)%0A            return%0A        if time %3E= self.__time:%0A            print(f%22fail: time finished after %7Bself.__time%7D minutes%22)%0A            self.__time = 0%0A        else:%0A            self.__time -= time%0A%0A    def honk(self):%0A        return %22P%22 + (%22e%22 * self.__potencia) + %22m%22%0A%0Adef main():%0A    motoca = Motoca()%0A    while True:%0A        line = input()%0A        print(%22$%22 + line)%0A        args = line.split()%0A%0A        if args%5B0%5D == %22end%22:%0A            break%0A        elif args%5B0%5D == %22init%22:%0A            power = int(args%5B1%5D)%0A            motoca = Motoca(power)%0A        elif args%5B0%5D == %22show%22:%0A            print(motoca)%0A        elif args%5B0%5D == %22buy%22:%0A            time = int(args%5B1%5D)%0A            motoca.buyTime(time)%0A        elif args%5B0%5D == %22enter%22:%0A            name = args%5B1%5D%0A            age = int(args%5B2%5D)%0A            pessoa = Pessoa(name, age)%0A            motoca.inserir(pessoa)%0A        elif args%5B0%5D == %22leave%22:%0A            pessoa = motoca.remover()%0A            if pessoa is not None:%0A                print(pessoa)%0A        elif args%5B0%5D == %22drive%22:%0A            tempo = int(args%5B1%5D)%0A            motoca.drive(tempo)%0A        elif args%5B0%5D == %22honk%22:%0A            print(motoca.honk())%0Amain()\n+@@ -31,17 +31,17 @@%0A (self, n%0A-a%0A+o%0A me : str%0A\n",
            "lines": "5"
        },
        {
            "label": "2025-10-23_19-59-29",
            "content": "@@ -1,2729 +1,207 @@\n-%0A%0Aclass Pessoa:%0A    def __init__(self, name : str, age: int):%0A        self.__name = name %0A        self.__age = age %0A%0A    def getAge(self):%0A        return self.__age%0A    %0A    def getName(self):%0A        return self.__name %0A    %0A    def _str_(self):%0A        return f%22%7Bself.__name%7D:%7Bself.__age%7D%22%0A    %0Aclass Motoca:%0A    def _init_(self, potencia = 1, ):%0A        self.__potencia: potencia%0A        self.__time: 0%0A        self.__pessoa: Pessoa %7CNone = None%0A%0A    def _str_(self):%0A        if self.__pessoa is not None:%0A            return f%22power:(%7Bself.__potencia%7D), time:(%7Bself.__time%7D), person:(%7Bstr(self.__pessoa)%7D)%22%0A        else:%0A            return f%22power:(%7Bself.__potencia%7D), time:(%7Bself.__time%7D), person:(%7Bself.__pessoa%7D)%22%0A        %0A    def inserir(self, pessoa: Pessoa) -%3E bool:%0A        if self.__pessoa is not None:%0A            print(%22fail: busy motorcycle%22)%0A            return False%0A        self.__pessoa = pessoa %0A        return%0A    %0A    def remover(self):%0A        if self.__pessoa is None:%0A            print(%22fail: empty motorcycle%22)%0A            return None%0A        else:%0A            pessoa_removida = self.__pessoa%0A            self.__pessoa = None%0A            return pessoa_removida%0A    %0A    def buyTime(self, time: int):%0A        self.__time += time %0A    %0A    def drive(self, time: int ):%0A        if self.__time == 0:%0A            print(%22fail: buy time first%22)%0A            return%0A        if self.__pessoa is None:%0A            print(%22fail: empty motorcycle%22)%0A            return%0A        if self.__pessoa.getAge() %3E 10:%0A            print(%22fail: too old to drive%22)%0A            return%0A        if time %3E= self.__time:%0A            print(f%22fail: time finished after %7Bself.__time%7D minutes%22)%0A            self.__time = 0%0A        else:%0A            self.__time -= time%0A%0A    def honk(self):%0A        return %22P%22 + (%22e%22 * self.__potencia) + %22m%22%0A%0Adef main():%0A    motoca = Motoca()%0A    while True:%0A        line = input()%0A        print(%22$%22 + line)%0A        args = line.split()%0A%0A        if args%5B0%5D == %22end%22:%0A            break%0A        elif args%5B0%5D == %22init%22:%0A            power = int(args%5B1%5D)%0A            motoca = Motoca(power)%0A        elif args%5B0%5D == %22show%22:%0A            print(motoca)%0A        elif args%5B0%5D == %22buy%22:%0A            time = int(args%5B1%5D)%0A            motoca.buyTime(time)%0A        elif args%5B0%5D == %22enter%22:%0A            name = args%5B1%5D%0A            age = int(args%5B2%5D)%0A            pessoa = Pessoa(name, age)%0A            motoca.inserir(pessoa)%0A        elif args%5B0%5D == %22leave%22:%0A            pessoa = motoca.remover()%0A            if pessoa is not None:%0A                print(pessoa)%0A        elif args%5B0%5D == %22drive%22:%0A            tempo = int(args%5B1%5D)%0A            motoca.drive(tempo)%0A        elif args%5B0%5D == %22honk%22:%0A            print(motoca.honk())%0Amain()\n+@@ -21,16 +21,14 @@%0A def %0A-_%0A _init_%0A-_%0A (sel%0A@@ -258,25 +258,24 @@%0A rn f%2522%257Bself._%0A-_%0A name%257D:%257Bself.%0A@@ -275,17 +275,16 @@%0A :%257Bself._%0A-_%0A age%257D%2522%250A  %0A@@ -391,16 +391,17 @@%0A f.__time%0A+ %0A : 0%250A    %0A\n",
            "lines": "18"
        },
        {
            "label": "2025-10-23_20-01-32",
            "content": "@@ -1,12 +1,14 @@\n+%0A%0A\n class Pessoa\n@@ -219,39 +219,37 @@\n e %0A    %0A    def \n-_\n _str_\n-_\n (self):%0A        \n@@ -308,32 +308,30 @@\n ca:%0A    def \n-_\n _init_\n-_\n (self, poten\n@@ -455,15 +455,13 @@\n def \n-_\n _str_\n-_\n (sel\n",
            "lines": "98"
        },
        {
            "label": "2025-10-23_20-04-53",
            "content": "@@ -34,16 +34,17 @@\n lf, name\n+ \n : str, a\n@@ -79,16 +79,17 @@\n e = name\n+ \n %0A       \n@@ -105,16 +105,17 @@\n ge = age\n+ \n %0A%0A    de\n@@ -156,16 +156,20 @@\n f.__age%0A\n+    \n %0A    def\n@@ -210,17 +210,22 @@\n f.__name\n-%0A\n+ %0A    \n %0A    def\n@@ -285,17 +285,20 @@\n __age%7D%22%0A\n-%0A\n+    \n %0Aclass M\n@@ -339,10 +339,14 @@\n ncia\n-=1\n+ = 1, \n ):%0A \n@@ -367,18 +367,17 @@\n potencia\n- =\n+:\n  potenci\n@@ -389,34 +389,33 @@\n      self.__time\n- =\n+:\n  0%0A        self.\n@@ -432,17 +432,16 @@\n Pessoa %7C\n- \n None = N\n@@ -525,32 +525,33 @@\n  return f%22power:\n+(\n %7Bself.__potencia\n@@ -543,39 +543,41 @@\n self.__potencia%7D\n+)\n , time:\n+(\n %7Bself.__time%7D, p\n@@ -565,32 +565,33 @@\n e:(%7Bself.__time%7D\n+)\n , person:(%7Bstr(s\n@@ -648,16 +648,17 @@\n f%22power:\n+(\n %7Bself.__\n@@ -666,23 +666,25 @@\n otencia%7D\n+)\n , time:\n+(\n %7Bself.__\n@@ -688,16 +688,17 @@\n .__time%7D\n+)\n , person\n@@ -703,16 +703,34 @@\n on:(\n-empty)%22%0A\n+%7Bself.__pessoa%7D)%22%0A        \n %0A   \n",
            "lines": "96"
        },
        {
            "label": "2025-10-23_20-23-39",
            "content": "class Pessoa:\n    def __init__(self, name: str, age: int):\n        self.__name = name\n        self.__age = age\n\n    def getAge(self):\n        return self.__age\n\n    def getName(self):\n        return self.__name\n\n    def __str__(self):\n        return f\"{self.__name}:{self.__age}\"\n\n\nclass Motoca:\n    def __init__(self, potencia=1):\n        self.__potencia = potencia\n        self.__time = 0\n        self.__pessoa: Pessoa | None = None\n\n    def __str__(self):\n        if self.__pessoa is not None:\n            return f\"power:{self.__potencia}, time:{self.__time}, person:({str(self.__pessoa)})\"\n        else:\n            return f\"power:{self.__potencia}, time:{self.__time}, person:(empty)\"\n\n    def inserir(self, pessoa: Pessoa) -> bool:\n        if self.__pessoa is not None:\n            print(\"fail: busy motorcycle\")\n            return False\n        self.__pessoa = pessoa \n        return\n    \n    def remover(self):\n        if self.__pessoa is None:\n            print(\"fail: empty motorcycle\")\n            return None\n        else:\n            pessoa_removida = self.__pessoa\n            self.__pessoa = None\n            return pessoa_removida\n    \n    def buyTime(self, time: int):\n        self.__time += time \n    \n    def drive(self, time: int ):\n        if self.__time == 0:\n            print(\"fail: buy time first\")\n            return\n        if self.__pessoa is None:\n            print(\"fail: empty motorcycle\")\n            return\n        if self.__pessoa.getAge() > 10:\n            print(\"fail: too old to drive\")\n            return\n        if time >= self.__time:\n            print(f\"fail: time finished after {self.__time} minutes\")\n            self.__time = 0\n        else:\n            self.__time -= time\n\n    def honk(self):\n        return \"P\" + (\"e\" * self.__potencia) + \"m\"\n\ndef main():\n    motoca = Motoca()\n    while True:\n        line = input()\n        print(\"$\" + line)\n        args = line.split()\n\n        if args[0] == \"end\":\n            break\n        elif args[0] == \"init\":\n            power = int(args[1])\n            motoca = Motoca(power)\n        elif args[0] == \"show\":\n            print(motoca)\n        elif args[0] == \"buy\":\n            time = int(args[1])\n            motoca.buyTime(time)\n        elif args[0] == \"enter\":\n            name = args[1]\n            age = int(args[2])\n            pessoa = Pessoa(name, age)\n            motoca.inserir(pessoa)\n        elif args[0] == \"leave\":\n            pessoa = motoca.remover()\n            if pessoa is not None:\n                print(pessoa)\n        elif args[0] == \"drive\":\n            tempo = int(args[1])\n            motoca.drive(tempo)\n        elif args[0] == \"honk\":\n            print(motoca.honk())\nmain()",
            "lines": "97"
        }
    ]
}