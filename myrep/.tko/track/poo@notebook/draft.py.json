{
    "patches": [
        {
            "label": "2025-10-23_20-10-32",
            "content": "@@ -1,3042 +0,0 @@\n-class Bateria:%0A    def __init__(self, capacidade: int):%0A        self.__capacidade: int = capacidade%0A        self.__carga: int = capacidade%0A%0A    def getCapacidade(self) -%3E int:%0A        return self.__capacidade%0A%0A    def getCarga(self) -%3E int:%0A        return self.__carga%0A%0A    def gastar(self, tempo: int):%0A        if tempo %3E self.__carga:%0A            gasto_real = self.__carga%0A            self.__carga = 0%0A            return gasto_real%0A        else:%0A            self.__carga -= tempo%0A            return tempo%0A    def carregar(self, quantidade: int):%0A        self.__carga += quantidade%0A        if self.__carga %3E self.__capacidade:%0A            self.__carga = self.__capacidade%0A%0A    def mostrar(self):%0A        print(f%22(%7Bself.__carga%7D/%7Bself.__capacidade%7D)%22)%0A%0Aclass Carregador:%0A    def __init__(self, potencia: int):%0A        self.__potencia = potencia%0A    def getPotencia(self):%0A        return self.__potencia%0A    def mostrar(self):%0A        print(f%22(Pot%C3%AAncia %7Bself.__potencia%7D)%22)%0A%0A%0Aclass Notebook:%0A    def __init__(self):%0A        self.__ligado: bool = False%0A        self.__bateria: Bateria %7C None = None%0A        self.carregador: Carregador %7C None = None%0A    def geBateria(self):%0A        return self.__bateria%0A%0A    def setBateria(self, bateria: Bateria):%0A        self.__bateria = Bateria%0A%0A    def rmBateria(self):%0A        if self.__bateria is not None:%0A            print(%22bateria removida%22)%0A            temp = self.__bateria%0A            self.__bateria = None%0A            return temp%0A        else:%0A            print(%22nenhuma bateria para remover%22)%0A%0A    def setCarregador(self, carregador: Carregador):%0A        self.__carregador = carregador%0A%0A    def ligar(self):%0A        carga = self.__bateria.getCarga() if self.__bateria else 0%0A        if carga %3E 0 or self.__carregador:%0A            self.__ligado = True%0A            print(%22notebook ligado%22)%0A        else:%0A            print(%22n%C3%A3o foi poss%C3%ADvel ligar%22)%0A%0A    def desligar(self):%0A        if self.__ligado:%0A            self.__ligado = False%0A            print(%22notebook desligado%22)%0A%0A    def mostrar(self):%0A        if self.__ligado:%0A            estado = %22Ligado%22%0A        else:%0A            estado = %22Desligado%22%0A%0A        if self.__bateria is None:%0A            bateria_status = %22(Nenhuma)%22%0A        else:%0A            bateria_status = f%22(%7Bself.__bateria.getCarga()%7D/%7Bself.__bateria.getCapacidade()%7D)%22%0A%0A        if self.__carregador is None:%0A            carregador_status = %22(Desconectado)%22%0A        else:%0A            carregador_status = f%22(Pot%C3%AAncia %7Bself.__carregador.getPotencia()%7D)%22%0A%0A        print(%22Status:%22, estado, %22, Bateria:%22, bateria_status, %22, Carregador:%22, carregador_status)%0A%0A    def usar(self, tempo: int):%0A        if not self.__ligado or self.__bateria is None or self.__bateria.getCarga() == 0:%0A            print(%22erro: ligue o notebook primeiro%22)%0A        else:%0A            gasto = self.__bateria.gastar(tempo)%0A            if gasto %3C tempo:%0A                print(f%22Usando por %7Bgasto%7D minutos%22)%0A                self.__ligado = False%0A            else:%0A                print(f%22Usando por %7Btempo%7D minutos%22)\n",
            "lines": "0"
        },
        {
            "label": "2025-10-23_20-13-31",
            "content": "@@ -1,7 +1,3042 @@\n-%0A%0A%0Aoi%0A%0A\n+class Bateria:%0A    def __init__(self, capacidade: int):%0A        self.__capacidade: int = capacidade%0A        self.__carga: int = capacidade%0A%0A    def getCapacidade(self) -%3E int:%0A        return self.__capacidade%0A%0A    def getCarga(self) -%3E int:%0A        return self.__carga%0A%0A    def gastar(self, tempo: int):%0A        if tempo %3E self.__carga:%0A            gasto_real = self.__carga%0A            self.__carga = 0%0A            return gasto_real%0A        else:%0A            self.__carga -= tempo%0A            return tempo%0A    def carregar(self, quantidade: int):%0A        self.__carga += quantidade%0A        if self.__carga %3E self.__capacidade:%0A            self.__carga = self.__capacidade%0A%0A    def mostrar(self):%0A        print(f%22(%7Bself.__carga%7D/%7Bself.__capacidade%7D)%22)%0A%0Aclass Carregador:%0A    def __init__(self, potencia: int):%0A        self.__potencia = potencia%0A    def getPotencia(self):%0A        return self.__potencia%0A    def mostrar(self):%0A        print(f%22(Pot%C3%AAncia %7Bself.__potencia%7D)%22)%0A%0A%0Aclass Notebook:%0A    def __init__(self):%0A        self.__ligado: bool = False%0A        self.__bateria: Bateria %7C None = None%0A        self.carregador: Carregador %7C None = None%0A    def geBateria(self):%0A        return self.__bateria%0A%0A    def setBateria(self, bateria: Bateria):%0A        self.__bateria = Bateria%0A%0A    def rmBateria(self):%0A        if self.__bateria is not None:%0A            print(%22bateria removida%22)%0A            temp = self.__bateria%0A            self.__bateria = None%0A            return temp%0A        else:%0A            print(%22nenhuma bateria para remover%22)%0A%0A    def setCarregador(self, carregador: Carregador):%0A        self.__carregador = carregador%0A%0A    def ligar(self):%0A        carga = self.__bateria.getCarga() if self.__bateria else 0%0A        if carga %3E 0 or self.__carregador:%0A            self.__ligado = True%0A            print(%22notebook ligado%22)%0A        else:%0A            print(%22n%C3%A3o foi poss%C3%ADvel ligar%22)%0A%0A    def desligar(self):%0A        if self.__ligado:%0A            self.__ligado = False%0A            print(%22notebook desligado%22)%0A%0A    def mostrar(self):%0A        if self.__ligado:%0A            estado = %22Ligado%22%0A        else:%0A            estado = %22Desligado%22%0A%0A        if self.__bateria is None:%0A            bateria_status = %22(Nenhuma)%22%0A        else:%0A            bateria_status = f%22(%7Bself.__bateria.getCarga()%7D/%7Bself.__bateria.getCapacidade()%7D)%22%0A%0A        if self.__carregador is None:%0A            carregador_status = %22(Desconectado)%22%0A        else:%0A            carregador_status = f%22(Pot%C3%AAncia %7Bself.__carregador.getPotencia()%7D)%22%0A%0A        print(%22Status:%22, estado, %22, Bateria:%22, bateria_status, %22, Carregador:%22, carregador_status)%0A%0A    def usar(self, tempo: int):%0A        if not self.__ligado or self.__bateria is None or self.__bateria.getCarga() == 0:%0A            print(%22erro: ligue o notebook primeiro%22)%0A        else:%0A            gasto = self.__bateria.gastar(tempo)%0A            if gasto %3C tempo:%0A                print(f%22Usando por %7Bgasto%7D minutos%22)%0A                self.__ligado = False%0A            else:%0A                print(f%22Usando por %7Btempo%7D minutos%22)\n",
            "lines": "100"
        },
        {
            "label": "2025-10-23_20-52-25",
            "content": "@@ -1,3138 +1,7 @@\n-class Bateria:%0A    def __init__(self, capacidade: int):%0A        self.__capacidade = capacidade%0A        self.__carga = capacidade%0A%0A    def getBateria(self):%0A        return f%22%7Bself.__carga%7D/%7Bself.__capacidade%7D%22%0A    def usingBateria(self, tempo:int):%0A        self.__carga -= tempo%0A        if self.__carga %3C 0:%0A            self.__carga = 0%0A    def carregar(self, potencia:int , tempo:int):%0A        self.__carga += potencia * tempo%0A        if self.__carga %3E self.__capacidade:%0A            self.__carga = self.__capacidade%0A%0A    %0A    def temCarga(self):%0A        return self.__carga %3E 0%0A    %0A%0Aclass Carregador:%0A    def __init__(self, potencia:int):%0A        self.__potencia = potencia%0A    def getPotencia(self):%0A        return self.__potencia%0A    %0Aclass Notebook:%0A    def __init__(self):%0A        self.__ligado = False%0A        self.__bateria: Bateria %7C None = None%0A        self.__carregador: Carregador %7C None = None%0A%0A    def ligar(self):%0A        if self.__bateria and self.__bateria.temCarga():%0A            self.__ligado = True%0A            print(%22msg: Notebook ligado%22)%0A        elif self.__carregador:%0A            self.__ligado = True%0A        else:%0A            print(%22fail: sem bateria ou carregador%22)%0A%0A    def desligar(self):%0A        self.__ligado = False%0A        print(%22msg: Notebook desligado%22)%0A%0A    def setBateria(self, bateria: Bateria):%0A        self.__bateria = bateria%0A        print(%22msg: Bateria conectada%22)%0A%0A    def rmBateria(self, bateria: Bateria):%0A        self.__bateria = None%0A        print(%22msg: Bateria removida%22)%0A    def setCarregador(self, carregador:Carregador):%0A        self.__carregador = carregador%0A        print(%22msg: Carregador conectado%22)%0A    def rmCarregador(self, carregador:Carregador):%0A        self.__carregador = None%0A        print(%22msg: carregador desconectado%22)%0A    def usar(self, tempo: int):%0A        if not self.__ligado:%0A            print(%22fail: ligue o notebook primeiro%22)%0A            return%0A        print(f%22msg: Usando por %7Btempo%7D minutos%22)%0A        if self.__bateria and self.__carregador:%0A            self.__bateria.carregar(self.__carregador.getPotencia(), tempo)%0A        elif self.__bateria:%0A            self.__bateria.usingBateria(tempo)%0A            if not self.__bateria.temCarga():%0A                print(%22bateira zeradad, notebook desligado%22)%0A                self.__ligado = False%0A        elif not self.__bateria or not self.__carregador():%0A            print(%22fail: sem bateria e sem carregador%22)%0A            self.__ligado = False%0A        if self.__bateria:%0A            print(self.__bateria.getBateria)%0A%0A    def show(self):%0A        status = %22ligado%22 if self.__ligado else %22desligado%22%0A        print(f%22Notebook: %7Bstatus%7D%22)%0A        if self.__bateria or self.__carregador:%0A            print(f%22bateria: %7Bself.__bateria.getBateria()%7D, potencia carregador: %7Bself.__carregador.getPotencia()%7D%22)%0A        else:%0A            print(%22sem bateria%22)%0A%0A%0A%22%22%22 %0Adef main():%0A    notebook:Notebook = Notebook()%0A    while True:%0A        %0A        line = input()%0A        print(%22$%22+line)%0A        args:list%5Bstr%5D = line.split(%22 %22)%0A        comando:str = args%5B0%5D%0A%0A        match comando:%0A            case %22end%22:%0A                break%0A %22%22%22\n+%0A%0A%0Aoi%0A\n %0A\n",
            "lines": "5"
        },
        {
            "label": "2025-10-23_20-55-12",
            "content": "@@ -202,17 +202,16 @@\n idade%7D%22%0A\n-%0A\n     def \n@@ -227,33 +227,32 @@\n ria(self, tempo:\n- \n int):%0A        se\n@@ -329,17 +329,16 @@\n rga = 0%0A\n-%0A\n     def \n@@ -365,20 +365,20 @@\n cia:\n- \n int\n+ \n , tempo:\n  int\n@@ -365,33 +365,32 @@\n cia:int , tempo:\n- \n int):%0A        se\n@@ -503,32 +503,37 @@\n f.__capacidade%0A%0A\n+    %0A\n     def temCarga\n@@ -572,16 +572,20 @@\n rga %3E 0%0A\n+    \n %0A%0Aclass \n@@ -628,17 +628,16 @@\n otencia:\n- \n int):%0A  \n@@ -669,17 +669,16 @@\n otencia%0A\n-%0A\n     def \n@@ -727,17 +727,20 @@\n otencia%0A\n-%0A\n+    \n %0Aclass N\n@@ -1123,67 +1123,8 @@\n rue%0A\n-            print(%22msg: Notebook ligado (com carregador)%22)%0A\n     \n@@ -1415,32 +1415,50 @@\n f rmBateria(self\n+, bateria: Bateria\n ):%0A        self.\n@@ -1509,25 +1509,24 @@\n  removida%22)%0A\n-%0A\n     def setC\n@@ -1544,33 +1544,32 @@\n elf, carregador:\n- \n Carregador):%0A   \n@@ -1639,33 +1639,32 @@\n dor conectado%22)%0A\n-%0A\n     def rmCarreg\n@@ -1668,24 +1668,47 @@\n regador(self\n+, carregador:Carregador\n ):%0A        s\n@@ -1743,33 +1743,33 @@\n     print(%22msg: \n-C\n+c\n arregador descon\n@@ -1773,25 +1773,24 @@\n conectado%22)%0A\n-%0A\n     def usar\n@@ -1911,17 +1911,16 @@\n  return%0A\n-%0A\n         \n@@ -1961,17 +1961,16 @@\n nutos%22)%0A\n-%0A\n         \n@@ -2235,28 +2235,22 @@\n nt(%22\n-fail: \n bate\n-r\n i\n+r\n a zerada\n , no\n@@ -2245,16 +2245,17 @@\n a zerada\n+d\n , notebo\n@@ -2309,34 +2309,80 @@\n False%0A        el\n-se\n+if not self.__bateria or not self.__carregador()\n :%0A            pr\n@@ -2457,17 +2457,16 @@\n = False%0A\n-%0A\n         \n@@ -2506,20 +2506,8 @@\n int(\n-%22Bateria:%22, \n self\n@@ -2527,18 +2527,16 @@\n tBateria\n-()\n )%0A%0A    d\n@@ -2572,9 +2572,9 @@\n  = %22\n-L\n+l\n igad\n@@ -2603,9 +2603,9 @@\n se %22\n-D\n+d\n esli\n@@ -2630,14 +2630,16 @@\n t(f%22\n-Status\n+Notebook\n : %7Bs\n@@ -2664,32 +2664,53 @@\n f self.__bateria\n+ or self.__carregador\n :%0A            pr\n@@ -2715,17 +2715,17 @@\n print(f%22\n-B\n+b\n ateria: \n@@ -2757,62 +2757,20 @@\n a()%7D\n-%22)%0A        if self.__carregador:%0A            print(f%22C\n+, potencia c\n arre\n@@ -2813,9 +2813,8 @@\n a()%7D\n-W\n %22)%0A \n@@ -2824,55 +2824,12 @@\n     \n-if not self.__bateria and not self.__carregador\n+else\n :%0A  \n@@ -2860,29 +2860,17 @@\n eria\n- e sem carregador%22)%0A%0A\n+%22)%0A%0A%0A%22%22%22 \n %0Adef\n@@ -2894,19 +2894,17 @@\n book\n- = \n+:\n Notebook\n ()%0A \n@@ -2903,52 +2903,21 @@\n book\n-()%0A    bateria = None%0A    carregador = None%0A\n+ = Notebook()\n %0A   \n@@ -2929,16 +2929,25 @@\n e True:%0A\n+        %0A\n         \n@@ -2982,11 +2982,9 @@\n (%22$%22\n- + \n++\n line\n@@ -2997,16 +2997,26 @@\n     args\n+:list%5Bstr%5D\n  = line.\n@@ -3045,1125 +3045,94 @@\n ando\n- = args%5B0%5D%0A%0A        if comando == %22end%22:%0A            break%0A        elif comando == %22initBateria%22:%0A            capacidade = int(args%5B1%5D)%0A            bateria = Bateria(capacidade)%0A        elif comando == %22initCarregador%22:%0A            potencia = int(args%5B1%5D)%0A            carregador = Carregador(potencia)%0A        elif comando == %22setBateria%22:%0A            if bateria:%0A                notebook.setBateria(bateria)%0A            else:%0A                print(%22fail: crie uma bateria primeiro%22)%0A        elif comando == %22setCarregador%22:%0A            if carregador:%0A                notebook.setCarregador(carregador)%0A            else:%0A                print(%22fail: crie um carregador primeiro%22)%0A        elif comando == %22rmBateria%22:%0A            notebook.rmBateria()%0A        elif comando == %22rmCarregador%22:%0A            notebook.rmCarregador()%0A        elif comando == %22ligar%22:%0A            notebook.ligar()%0A        elif comando == %22desligar%22:%0A            notebook.desligar()%0A        elif comando == %22usar%22:%0A            tempo = int(args%5B1%5D)%0A            notebook.usar(tempo)%0A        elif comando == %22show%22:%0A            notebook.show()%0A%0Amain()\n+:str = args%5B0%5D%0A%0A        match comando:%0A            case %22end%22:%0A                break%0A %22%22%22%0A\n",
            "lines": "100"
        },
        {
            "label": "2025-10-23_20-56-24",
            "content": "@@ -3109,25 +3109,24 @@\n it(%22 %22)%0A\n-%0A\n         \n if args%5B\n@@ -3117,26 +3117,53 @@\n         \n-if args%5B0%5D\n+comando = args%5B0%5D%0A%0A        if comando\n  == %22end\n@@ -3188,39 +3188,39 @@\n ak%0A        elif \n-args%5B0%5D\n+comando\n  == %22initBateria\n@@ -3311,31 +3311,31 @@\n        elif \n-args%5B0%5D\n+comando\n  == %22initCar\n@@ -3431,39 +3431,39 @@\n a)%0A        elif \n-args%5B0%5D\n+comando\n  == %22setBateria%22\n@@ -3617,31 +3617,31 @@\n        elif \n-args%5B0%5D\n+comando\n  == %22setCarr\n@@ -3813,31 +3813,31 @@\n        elif \n-args%5B0%5D\n+comando\n  == %22rmBater\n@@ -3883,31 +3883,31 @@\n        elif \n-args%5B0%5D\n+comando\n  == %22rmCarre\n@@ -3959,31 +3959,31 @@\n        elif \n-args%5B0%5D\n+comando\n  == %22ligar%22:\n@@ -4021,31 +4021,31 @@\n        elif \n-args%5B0%5D\n+comando\n  == %22desliga\n@@ -4089,31 +4089,31 @@\n        elif \n-args%5B0%5D\n+comando\n  == %22usar%22:%0A\n@@ -4191,23 +4191,23 @@\n    elif \n-args%5B0%5D\n+comando\n  == %22sho\n",
            "lines": "142"
        },
        {
            "label": "2025-10-23_20-58-44",
            "content": "@@ -205,34 +205,42 @@\n de%7D%22%0A%0A    def us\n+ingBateri\n a\n-r\n (self, tempo: in\n@@ -1022,33 +1022,33 @@\n     print(%22msg: \n-n\n+N\n otebook ligado%22)\n@@ -1129,33 +1129,33 @@\n     print(%22msg: \n-n\n+N\n otebook ligado p\n@@ -1157,12 +1157,12 @@\n ado \n-pelo\n+(com\n  car\n@@ -1160,32 +1160,33 @@\n  (com carregador\n+)\n %22)%0A        else:\n@@ -1268,38 +1268,8 @@\n f):%0A\n-        if self.__ligado:%0A    \n     \n@@ -1294,36 +1294,32 @@\n = False%0A        \n-    \n print(%22msg: note\n@@ -1314,17 +1314,17 @@\n t(%22msg: \n-n\n+N\n otebook \n@@ -1339,73 +1339,123 @@\n o%22)%0A\n+%0A\n     \n-    else:%0A            print(%22fail: notebook j%C3%A1 est%C3%A1 desligado\n+def setBateria(self, bateria: Bateria):%0A        self.__bateria = bateria%0A        print(%22msg: Bateria conectada\n %22)%0A%0A\n@@ -1466,172 +1466,266 @@\n def \n-usar(self, tempo: int):%0A        if not self.__ligado:%0A            print(%22fail: ligue o notebook primeiro%22)%0A            return%0A%0A        if not self.__bateria and not\n+rmBateria(self):%0A        self.__bateria = None%0A        print(%22msg: Bateria removida%22)%0A%0A    def setCarregador(self, carregador: Carregador):%0A        self.__carregador = carregador%0A        print(%22msg: Carregador conectado%22)%0A%0A    def rmCarregador(self):%0A       \n  sel\n@@ -1734,36 +1734,40 @@\n __carregador\n-:%0A  \n+ = None%0A\n         \n   print(%22fai\n@@ -1758,87 +1758,161 @@\n     \n-  \n print(%22\n-fail: sem bateria e sem carreg\n+msg: Carregador desconect\n ado\n-r\n %22)%0A\n+%0A\n     \n-        self.__ligado = False\n+def usar(self, tempo: int):%0A        if not self.__ligado:%0A            print(%22fail: ligue o notebook primeiro%22)\n %0A   \n@@ -1983,55 +1983,8 @@\n %22)%0A%0A\n-        # Se tiver carregador, carrega bateria%0A\n     \n@@ -2107,54 +2107,8 @@\n mpo)\n-%0A%0A        # Se tiver s%C3%B3 bateria, consome carga\n %0A   \n@@ -2135,34 +2135,8 @@\n eria\n- and not self.__carregador\n :%0A  \n@@ -2162,18 +2162,26 @@\n teria.us\n+ingBateri\n a\n-r\n (tempo)%0A\n@@ -2334,2228 +2334,1893 @@\n lse%0A\n-%0A    def setBateria(self, bateria: Bateria):%0A        self.__bateria = bateria%0A        print(%22msg: bateria conectada%22)%0A%0A    def rmBateria(self):%0A        if self.__bateria:%0A            self.__bateria = None%0A            print(%22msg: bateria removida%22)%0A        else:%0A            print(%22fail: sem bateria conectada%22)%0A%0A    def setCarregador(self, carregador: Carregador):%0A        self.__carregador = carregador%0A        print(%22msg: carregador conectado%22)%0A%0A    def rmCarregador(self):%0A        if self.__carregador:%0A            self.__carregador = None%0A            print(%22msg: carregador desconectado%22)%0A        else:%0A            print(%22fail: sem carregador conectado%22)%0A%0A    def show(self):%0A        status = %22ligado%22 if self.__ligado else %22desligado%22%0A        print(f%22Notebook: %7Bstatus%7D%22)%0A%0A        if self.__bateria:%0A            print(f%22bateria: %7Bself.__bateria.getBateria()%7D%22)%0A        else:%0A            print(%22bateria: none%22)%0A%0A        if self.__carregador:%0A            print(f%22carregador: %7Bself.__carregador.getPotencia()%7DW%22)%0A        else:%0A            print(%22carregador: none%22)%0A%0A%0Adef main():%0A    notebook = Notebook()%0A    bateria = None%0A    carregador = None%0A%0A    while True:%0A        try:%0A            line = input()%0A        except EOFError:%0A            break %0A        if not line:%0A            continue%0A%0A        print(%22$%22 + line)%0A        args = line.split()%0A        cmd = args%5B0%5D%0A%0A        if cmd == %22end%22:%0A            break%0A%0A        elif cmd == %22init%22:%0A            notebook = Notebook()%0A%0A        elif cmd == %22show%22:%0A            notebook.show()%0A%0A        elif cmd == %22bateria%22:%0A            capacidade = int(args%5B1%5D)%0A            bateria = Bateria(capacidade)%0A            notebook.setBateria(bateria)%0A%0A        elif cmd == %22removeBateria%22:%0A            notebook.rmBateria()%0A%0A        elif cmd == %22carregador%22:%0A            potencia = int(args%5B1%5D)%0A            carregador = Carregador(potencia)%0A            notebook.setCarregador(carregador)%0A%0A        elif cmd == %22removeCarregador%22:%0A            notebook.rmCarregador()%0A%0A        elif cmd == %22ligar%22:%0A            notebook.ligar()%0A%0A        elif cmd == %22desligar%22:%0A            notebook.desligar()%0A%0A        elif cmd == %22usar%22:%0A            tempo = int(args%5B1%5D)%0A            notebook.usar(tempo)%0A%0Amain()%0A\n+        else:%0A            print(%22fail: sem bateria e sem carregador%22)%0A            self.__ligado = False%0A%0A        if self.__bateria:%0A            print(%22Bateria:%22, self.__bateria.getBateria())%0A%0A    def show(self):%0A        status = %22Ligado%22 if self.__ligado else %22Desligado%22%0A        print(f%22Status: %7Bstatus%7D%22)%0A        if self.__bateria:%0A            print(f%22Bateria: %7Bself.__bateria.getBateria()%7D%22)%0A        if self.__carregador:%0A            print(f%22Carregador: %7Bself.__carregador.getPotencia()%7DW%22)%0A        if not self.__bateria and not self.__carregador:%0A            print(%22sem bateria e sem carregador%22)%0A%0A%0Adef main():%0A    notebook = Notebook()%0A    bateria = None%0A    carregador = None%0A%0A    while True:%0A        line = input()%0A        print(%22$%22 + line)%0A        args = line.split(%22 %22)%0A%0A        if args%5B0%5D == %22end%22:%0A            break%0A        elif args%5B0%5D == %22initBateria%22:%0A            capacidade = int(args%5B1%5D)%0A            bateria = Bateria(capacidade)%0A        elif args%5B0%5D == %22initCarregador%22:%0A            potencia = int(args%5B1%5D)%0A            carregador = Carregador(potencia)%0A        elif args%5B0%5D == %22setBateria%22:%0A            if bateria:%0A                notebook.setBateria(bateria)%0A            else:%0A                print(%22fail: crie uma bateria primeiro%22)%0A        elif args%5B0%5D == %22setCarregador%22:%0A            if carregador:%0A                notebook.setCarregador(carregador)%0A            else:%0A                print(%22fail: crie um carregador primeiro%22)%0A        elif args%5B0%5D == %22rmBateria%22:%0A            notebook.rmBateria()%0A        elif args%5B0%5D == %22rmCarregador%22:%0A            notebook.rmCarregador()%0A        elif args%5B0%5D == %22ligar%22:%0A            notebook.ligar()%0A        elif args%5B0%5D == %22desligar%22:%0A            notebook.desligar()%0A        elif args%5B0%5D == %22usar%22:%0A            tempo = int(args%5B1%5D)%0A            notebook.usar(tempo)%0A        elif args%5B0%5D == %22show%22:%0A            notebook.show()%0A%0Amain()\n",
            "lines": "141"
        },
        {
            "label": "2025-10-23_21-18-10",
            "content": "class Bateria:\n    def __init__(self, capacidade: int):\n        self.__capacidade = capacidade\n        self.__carga = capacidade\n\n    def getBateria(self):\n        return f\"{self.__carga}/{self.__capacidade}\"\n\n    def usar(self, tempo: int):\n        self.__carga -= tempo\n        if self.__carga < 0:\n            self.__carga = 0\n\n    def carregar(self, potencia: int, tempo: int):\n        self.__carga += potencia * tempo\n        if self.__carga > self.__capacidade:\n            self.__carga = self.__capacidade\n\n    def temCarga(self):\n        return self.__carga > 0\n\n\nclass Carregador:\n    def __init__(self, potencia: int):\n        self.__potencia = potencia\n\n    def getPotencia(self):\n        return self.__potencia\n\n\nclass Notebook:\n    def __init__(self):\n        self.__ligado = False\n        self.__bateria: Bateria | None = None\n        self.__carregador: Carregador | None = None\n\n    def ligar(self):\n        if self.__bateria and self.__bateria.temCarga():\n            self.__ligado = True\n            print(\"msg: notebook ligado\")\n        elif self.__carregador:\n            self.__ligado = True\n            print(\"msg: notebook ligado pelo carregador\")\n        else:\n            print(\"fail: sem bateria ou carregador\")\n\n    def desligar(self):\n        if self.__ligado:\n            self.__ligado = False\n            print(\"msg: notebook desligado\")\n        else:\n            print(\"fail: notebook j\u00e1 est\u00e1 desligado\")\n\n    def usar(self, tempo: int):\n        if not self.__ligado:\n            print(\"fail: ligue o notebook primeiro\")\n            return\n\n        if not self.__bateria and not self.__carregador:\n            print(\"fail: sem bateria e sem carregador\")\n            self.__ligado = False\n            return\n\n        print(f\"msg: Usando por {tempo} minutos\")\n\n        # Se tiver carregador, carrega bateria\n        if self.__bateria and self.__carregador:\n            self.__bateria.carregar(self.__carregador.getPotencia(), tempo)\n\n        # Se tiver s\u00f3 bateria, consome carga\n        elif self.__bateria and not self.__carregador:\n            self.__bateria.usar(tempo)\n            if not self.__bateria.temCarga():\n                print(\"fail: bateria zerada, notebook desligado\")\n                self.__ligado = False\n\n    def setBateria(self, bateria: Bateria):\n        self.__bateria = bateria\n        print(\"msg: bateria conectada\")\n\n    def rmBateria(self):\n        if self.__bateria:\n            self.__bateria = None\n            print(\"msg: bateria removida\")\n        else:\n            print(\"fail: sem bateria conectada\")\n\n    def setCarregador(self, carregador: Carregador):\n        self.__carregador = carregador\n        print(\"msg: carregador conectado\")\n\n    def rmCarregador(self):\n        if self.__carregador:\n            self.__carregador = None\n            print(\"msg: carregador desconectado\")\n        else:\n            print(\"fail: sem carregador conectado\")\n\n    def show(self):\n        status = \"ligado\" if self.__ligado else \"desligado\"\n        print(f\"Notebook: {status}\")\n\n        if self.__bateria:\n            print(f\"bateria: {self.__bateria.getBateria()}\")\n        else:\n            print(\"bateria: none\")\n\n        if self.__carregador:\n            print(f\"carregador: {self.__carregador.getPotencia()}W\")\n        else:\n            print(\"carregador: none\")\n\n\ndef main():\n    notebook = Notebook()\n    bateria = None\n    carregador = None\n\n    while True:\n        try:\n            line = input()\n        except EOFError:\n            break \n        if not line:\n            continue\n\n        print(\"$\" + line)\n        args = line.split()\n        cmd = args[0]\n\n        if cmd == \"end\":\n            break\n\n        elif cmd == \"init\":\n            notebook = Notebook()\n\n        elif cmd == \"show\":\n            notebook.show()\n\n        elif cmd == \"bateria\":\n            capacidade = int(args[1])\n            bateria = Bateria(capacidade)\n            notebook.setBateria(bateria)\n\n        elif cmd == \"removeBateria\":\n            notebook.rmBateria()\n\n        elif cmd == \"carregador\":\n            potencia = int(args[1])\n            carregador = Carregador(potencia)\n            notebook.setCarregador(carregador)\n\n        elif cmd == \"removeCarregador\":\n            notebook.rmCarregador()\n\n        elif cmd == \"ligar\":\n            notebook.ligar()\n\n        elif cmd == \"desligar\":\n            notebook.desligar()\n\n        elif cmd == \"usar\":\n            tempo = int(args[1])\n            notebook.usar(tempo)\n\nmain()\n",
            "lines": "166"
        }
    ]
}