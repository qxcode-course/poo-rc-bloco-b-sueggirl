{
    "patches": [
        {
            "label": "2025-10-23_21-19-05",
            "content": "@@ -1,4536 +0,0 @@\n-class Bateria:%0A    def __init__(self, capacidade: int):%0A        self.__capacidade = capacidade%0A        self.__carga = capacidade%0A%0A    def usar(self, tempo: int):%0A        self.__carga -= tempo%0A        if self.__carga %3C 0:%0A            self.__carga = 0%0A%0A    def carregar(self, potencia: int, tempo: int):%0A        self.__carga += potencia * tempo%0A        if self.__carga %3E self.__capacidade:%0A            self.__carga = self.__capacidade%0A%0A    def getCarga(self):%0A        return self.__carga%0A%0A    def getCapacidade(self):%0A        return self.__capacidade%0A%0A    def temCarga(self):%0A        return self.__carga %3E 0%0A%0A    def __str__(self):%0A        return f%22%7Bself.__carga%7D/%7Bself.__capacidade%7D%22%0A%0A%0Aclass Carregador:%0A    def __init__(self, potencia: int):%0A        self.__potencia = potencia%0A%0A    def getPotencia(self):%0A        return self.__potencia%0A%0A    def __str__(self):%0A        return f%22%7Bself.__potencia%7DW%22%0A%0A%0Aclass Notebook:%0A    def __init__(self):%0A        self.__ligado = False%0A        self.__tempoLigado = 0%0A        self.__bateria: Bateria %7C None = None%0A        self.__carregador: Carregador %7C None = None%0A%0A    def turn_on(self):%0A        if self.__ligado:%0A            return%0A        if (self.__bateria and self.__bateria.temCarga()) or self.__carregador:%0A            self.__ligado = True%0A        else:%0A            print(%22fail: n%C3%A3o foi poss%C3%ADvel ligar%22)%0A%0A    def turn_off(self):%0A        self.__ligado = False%0A%0A    def usar(self, tempo: int):%0A        if not self.__ligado:%0A            print(%22fail: desligado%22)%0A            return%0A%0A        self.__tempoLigado += tempo%0A%0A        # Caso com bateria e carregador%0A        if self.__bateria and self.__carregador:%0A            self.__bateria.carregar(self.__carregador.getPotencia(), tempo)%0A            return%0A%0A        # Caso com apenas carregador%0A        if self.__carregador and not self.__bateria:%0A            return%0A%0A        # Caso com apenas bateria%0A        if self.__bateria and not self.__carregador:%0A            if self.__bateria.getCarga() %3E= tempo:%0A                self.__bateria.usar(tempo)%0A            else:%0A                print(%22fail: descarregou%22)%0A                self.__bateria.usar(tempo)%0A                self.__ligado = False%0A            return%0A%0A    def set_charger(self, carregador: Carregador):%0A        if self.__carregador:%0A            print(%22fail: carregador j%C3%A1 conectado%22)%0A            return%0A        self.__carregador = carregador%0A%0A    def rm_charger(self):%0A        if self.__carregador:%0A            print(f%22Removido %7Bself.__carregador%7D%22)%0A            self.__carregador = None%0A            if not (self.__bateria and self.__bateria.temCarga()):%0A                self.__ligado = False%0A        else:%0A            print(%22fail: Sem carregador%22)%0A%0A    def set_battery(self, bateria: Bateria):%0A        if self.__bateria:%0A            print(%22fail: bateria j%C3%A1 conectada%22)%0A            return%0A        self.__bateria = bateria%0A%0A    def rm_battery(self):%0A        if self.__bateria:%0A            print(f%22Removido %7Bself.__bateria%7D%22)%0A            self.__bateria = None%0A            if not self.__carregador:%0A                self.__ligado = False%0A        else:%0A            print(%22fail: Sem bateria%22)%0A%0A    def show(self):%0A        if self.__ligado:%0A            texto = f%22Notebook: ligado por %7Bself.__tempoLigado%7D min%22%0A        else:%0A            texto = %22Notebook: desligado%22%0A%0A        itens = %5B%5D%0A        if self.__carregador:%0A            itens.append(f%22Carregador %7Bself.__carregador%7D%22)%0A        if self.__bateria:%0A            itens.append(f%22Bateria %7Bself.__bateria%7D%22)%0A%0A        if itens:%0A            texto += %22, %22 + %22, %22.join(itens)%0A%0A        print(texto)%0A%0A%0Adef main():%0A    notebook = Notebook()%0A%0A    while True:%0A        try:%0A            line = input()%0A        except EOFError:%0A            break%0A        if not line:%0A            continue%0A%0A        print(%22$%22 + line)%0A        args = line.split()%0A        cmd = args%5B0%5D%0A%0A        if cmd == %22end%22:%0A            break%0A%0A        elif cmd == %22show%22:%0A            notebook.show()%0A%0A        elif cmd == %22turn_on%22:%0A            notebook.turn_on()%0A%0A        elif cmd == %22turn_off%22:%0A            notebook.turn_off()%0A%0A        elif cmd == %22use%22:%0A            tempo = int(args%5B1%5D)%0A            notebook.usar(tempo)%0A%0A        elif cmd == %22set_charger%22:%0A            pot = int(args%5B1%5D)%0A            notebook.set_charger(Carregador(pot))%0A%0A        elif cmd == %22rm_charger%22:%0A            notebook.rm_charger()%0A%0A        elif cmd == %22set_battery%22:%0A            cap = int(args%5B1%5D)%0A            notebook.set_battery(Bateria(cap))%0A%0A        elif cmd == %22rm_battery%22:%0A            notebook.rm_battery()%0A%0A%0Amain()\n",
            "lines": "0"
        },
        {
            "label": "2025-10-23_21-21-33",
            "content": "@@ -1417,16 +1417,21 @@\n f, tempo\n+: int\n ):%0A     \n@@ -1446,16 +1446,17 @@\n t self._\n+_\n ligado:%0A\n@@ -1524,216 +1524,169 @@\n     \n-if \n self._\n-bateria and self._carregador:%0A            carga_atual = self._bateria.get_carga()%0A            capacidade =\n+_tempoLigado += tempo%0A%0A        # Caso com bateria e carregador%0A        if\n  self._\n+_\n bateria\n-.get_capacidade()%0A            nova_carga = min(capacidade, carga_atual + \n+ and self.__carregador:%0A            self.__bateria.carregar(\n self._\n+_\n carr\n@@ -1695,18 +1695,17 @@\n ador.get\n-_p\n+P\n otencia(\n@@ -1705,18 +1705,17 @@\n tencia()\n- *\n+,\n  tempo)%0A\n@@ -1730,43 +1730,52 @@\n     \n-self._bateria.set_carga(nova_carga)\n+return%0A%0A        # Caso com apenas carregador\n %0A   \n@@ -1783,56 +1783,106 @@\n     \n-   \n+if\n  self._\n-tempo_uso += tempo%0A            return%0A\n+_carregador and not self.__bateria:%0A            return%0A%0A        # Caso com apenas bateria\n %0A   \n@@ -1891,24 +1891,25 @@\n    if self._\n+_\n bateria and \n@@ -1914,24 +1914,25 @@\n d not self._\n+_\n carregador:%0A\n@@ -1947,28 +1947,18 @@\n     \n-carga_atual =\n+if\n  self._\n+_\n bate\n@@ -1968,124 +1968,25 @@\n .get\n-_c\n+C\n arga()\n-%0A            if carga_atual %3C= 0:%0A                print(%22fail: descarregou%22)%0A                self.desligar()\n+ %3E= tempo:\n %0A   \n@@ -2000,32 +2000,33 @@\n       self._\n+_\n bateria.\n set_carga(0)\n@@ -2009,35 +2009,34 @@\n f.__bateria.\n-set_carga(0\n+usar(tempo\n )%0A          \n@@ -2041,53 +2041,12 @@\n     \n-    return%0A            if carga_atual %3C tempo\n+else\n :%0A  \n@@ -2112,332 +2112,66 @@\n lf._\n-tempo_uso += carga_atual%0A                self._bateria.set_carga(0)%0A                self.desligar()%0A                return%0A            self._bateria.set_carga(carga_atual - tempo)%0A            self._tempo_uso += tempo%0A            return%0A%0A        if self._carregador and not self._bateria:%0A            self._tempo_uso += tempo\n+_bateria.usar(tempo)%0A                self.__ligado = False\n %0A   \n",
            "lines": "178"
        },
        {
            "label": "2025-10-23_21-23-53",
            "content": "@@ -3524,62 +3524,8 @@\n %22)%0A%0A\n-    def desligar(self):%0A        self._ligado = False%0A%0A\n     \n",
            "lines": "186"
        },
        {
            "label": "2025-10-23_21-24-51",
            "content": "@@ -1409,37 +1409,32 @@\n usar(self, tempo\n-: int\n ):%0A        if no\n@@ -1437,25 +1437,24 @@\n f not self._\n-_\n ligado:%0A    \n@@ -1518,169 +1518,216 @@\n     \n+if \n self._\n-_tempoLigado += tempo%0A%0A        # Caso com bateria e carregador%0A        if\n+bateria and self._carregador:%0A            carga_atual = self._bateria.get_carga()%0A            capacidade =\n  self._\n-_\n bateria\n- and self.__carregador:%0A            self.__bateria.carregar(\n+.get_capacidade()%0A            nova_carga = min(capacidade, carga_atual + \n self._\n-_\n carr\n@@ -1736,17 +1736,18 @@\n ador.get\n-P\n+_p\n otencia(\n@@ -1747,17 +1747,18 @@\n tencia()\n-,\n+ *\n  tempo)%0A\n@@ -1773,159 +1773,100 @@\n     \n-return%0A%0A        # Caso com apenas carregador%0A        if self.__carregador and not self.__bateria:%0A            return%0A%0A        # Caso com apenas bateria\n+self._bateria.set_carga(nova_carga)%0A            self._tempo_uso += tempo%0A            return%0A\n %0A   \n@@ -1875,25 +1875,24 @@\n    if self._\n-_\n bateria and \n@@ -1893,33 +1893,32 @@\n a and not self._\n-_\n carregador:%0A    \n@@ -1921,34 +1921,44 @@\n             \n-if\n+carga_atual =\n  self._\n-_\n bateria.getC\n@@ -1960,210 +1960,616 @@\n .get\n-C\n+_c\n arga()\n- %3E= tempo:%0A                self.__bateria.usar(tempo)%0A            else:%0A                print(%22fail: descarregou%22)%0A                self.__bateria.usar(tempo)%0A                self.__ligado = False\n+%0A            if carga_atual %3C= 0:%0A                print(%22fail: descarregou%22)%0A                self.desligar()%0A                self._bateria.set_carga(0)%0A                return%0A            if carga_atual %3C tempo:%0A                print(%22fail: descarregou%22)%0A                self._tempo_uso += carga_atual%0A                self._bateria.set_carga(0)%0A                self.desligar()%0A                return%0A            self._bateria.set_carga(carga_atual - tempo)%0A            self._tempo_uso += tempo%0A            return%0A%0A        if self._carregador and not self._bateria:%0A            self._tempo_uso += tempo\n %0A   \n@@ -3516,24 +3516,78 @@\n  bateria%22)%0A%0A\n+    def desligar(self):%0A        self._ligado = False%0A%0A\n     def show\n@@ -4981,9 +4981,8 @@\n %0A%0Amain()\n-%0A\n",
            "lines": "189"
        },
        {
            "label": "2025-10-23_21-29-59",
            "content": "@@ -127,88 +127,8 @@\n de%0A%0A\n-    def getBattery(self):%0A        return f%22%7Bself.__carga%7D/%7Bself.__capacidade%7D%22%0A%0A\n     \n@@ -147,32 +147,32 @@\n f, tempo: int):%0A\n+\n         self.__c\n@@ -599,20 +599,94 @@\n rga %3E 0%0A\n+%0A\n     \n+def __str__(self):%0A        return f%22%7Bself.__carga%7D/%7Bself.__capacidade%7D%22%0A%0A\n %0Aclass C\n@@ -830,16 +830,78 @@\n tencia%0A%0A\n+    def __str__(self):%0A        return f%22%7Bself.__potencia%7DW%22%0A%0A%0A\n class No\n@@ -1100,21 +1100,23 @@\n     def \n-ligar\n+turn_on\n (self):%0A\n@@ -1350,65 +1350,23 @@\n def \n-desligar(self):%0A        if not self._ligado:%0A            \n+turn_off(self):\n %0A   \n@@ -3627,16 +3627,33 @@\n e True:%0A\n+        try:%0A    \n         \n@@ -3667,16 +3667,102 @@\n input()%0A\n+        except EOFError:%0A            break%0A        if not line:%0A            continue%0A%0A\n         \n@@ -3811,27 +3811,29 @@\n t()%0A\n-%0A\n+ \n        \n- if\n+cmd =\n  args%5B0%5D\n  == \n@@ -3824,24 +3824,40 @@\n md = args%5B0%5D\n+%0A%0A        if cmd\n  == %22end%22:%0A \n@@ -3865,32 +3865,33 @@\n           break%0A\n+%0A\n         elif arg\n@@ -3883,31 +3883,27 @@\n        elif \n-args%5B0%5D\n+cmd\n  == %22show%22:%0A\n@@ -3930,16 +3930,17 @@\n .show()%0A\n+%0A\n         \n@@ -3936,39 +3936,35 @@\n )%0A%0A        elif \n-args%5B0%5D\n+cmd\n  == %22turn_on%22:%0A \n@@ -3993,16 +3993,17 @@\n rn_on()%0A\n+%0A\n         \n@@ -4003,31 +4003,27 @@\n        elif \n-args%5B0%5D\n+cmd\n  == %22turn_of\n@@ -4058,16 +4058,17 @@\n n_off()%0A\n+%0A\n         \n@@ -4068,31 +4068,27 @@\n        elif \n-args%5B0%5D\n+cmd\n  == %22use%22:%0A \n@@ -4144,32 +4144,33 @@\n ook.usar(tempo)%0A\n+%0A\n         elif arg\n@@ -4158,39 +4158,35 @@\n )%0A%0A        elif \n-args%5B0%5D\n+cmd\n  == %22set_charger\n@@ -4269,16 +4269,17 @@\n r(pot))%0A\n+%0A\n         \n@@ -4275,39 +4275,35 @@\n )%0A%0A        elif \n-args%5B0%5D\n+cmd\n  == %22rm_charger%22\n@@ -4338,16 +4338,17 @@\n arger()%0A\n+%0A\n         \n@@ -4348,31 +4348,27 @@\n        elif \n-args%5B0%5D\n+cmd\n  == %22set_bat\n@@ -4452,16 +4452,17 @@\n a(cap))%0A\n+%0A\n         \n@@ -4466,23 +4466,19 @@\n    elif \n-args%5B0%5D\n+cmd\n  == %22rm_\n@@ -4522,15 +4522,16 @@\n tery()%0A%0A\n+%0A\n main()%0A\n",
            "lines": "178"
        },
        {
            "label": "2025-10-23_21-38-07",
            "content": "@@ -1349,54 +1349,38 @@\n     \n-print(%22fail: j%C3%A1 desligado%22)%0A            return\n+%0A        self.__ligado = False\n %0A%0A  \n@@ -2364,39 +2364,40 @@\n ador%0A%0A    def rm\n-Bateria\n+_charger\n (self):%0A        \n@@ -2851,23 +2851,24 @@\n   def rm\n-Bateria\n+_battery\n (self):%0A\n@@ -3821,21 +3821,23 @@\n %5B0%5D == %22\n-ligar\n+turn_on\n %22:%0A     \n@@ -3852,21 +3852,23 @@\n otebook.\n-ligar\n+turn_on\n ()%0A     \n@@ -3887,24 +3887,24 @@\n %5B0%5D == %22\n-desligar\n+turn_off\n %22:%0A     \n@@ -3919,24 +3919,24 @@\n otebook.\n-desligar\n+turn_off\n ()%0A     \n@@ -4363,23 +4363,24 @@\n %5D == %22rm\n-Bateria\n+_battery\n %22:%0A     \n@@ -4397,23 +4397,24 @@\n ebook.rm\n-Bateria\n+_battery\n ()%0A%0Amain\n",
            "lines": "159"
        },
        {
            "label": "2025-10-23_21-41-19",
            "content": "@@ -133,28 +133,28 @@\n   def getBat\n+t\n er\n-ia\n+y\n (self):%0A    \n@@ -202,16 +202,17 @@\n idade%7D%22%0A\n+%0A\n     def \n@@ -213,26 +213,18 @@\n   def us\n-ingBateri\n a\n+r\n (self, t\n@@ -220,32 +220,33 @@\n sar(self, tempo:\n+ \n int):%0A        se\n@@ -319,24 +319,25 @@\n __carga = 0%0A\n+%0A\n     def carr\n@@ -360,20 +360,20 @@\n cia:\n+ \n int\n- \n , tempo:\n int)\n@@ -368,16 +368,17 @@\n , tempo:\n+ \n int):%0A  \n@@ -510,63 +510,8 @@\n ade%0A\n-    def temCarga(self):%0A        return self.__carga %3E 0\n %0A   \n@@ -559,16 +559,17 @@\n __carga%0A\n+%0A\n     def \n@@ -626,18 +626,69 @@\n ade%0A\n+%0A\n     \n+def temCarga(self):%0A        return self.__carga %3E 0\n %0A    \n-%0A\n %0Acla\n@@ -726,32 +726,33 @@\n (self, potencia:\n+ \n int):%0A        se\n@@ -772,24 +772,25 @@\n  = potencia%0A\n+%0A\n     def getP\n@@ -835,20 +835,16 @@\n otencia%0A\n-    \n %0Aclass N\n@@ -922,26 +922,27 @@\n self.__tempo\n-Us\n+Lig\n ado = 0%0A    \n@@ -1079,2568 +1079,2479 @@\n f.__\n-bateria and self.__bateria.temCarga():%0A            self.__ligado = True%0A        elif self.__carregador:%0A            self.__ligado = True%0A        else:%0A            print(%22fail: n%C3%A3o foi poss%C3%ADvel ligar%22)%0A%0A    def desligar(self):%0A        if not self.__ligado:%0A            print(%22fail: j%C3%A1 desligado%22)%0A            return%0A        self.__ligado = False%0A    def setBateria(self, capacidade:int):%0A        if self.__bateria:%0A            print(%22fail: bateria ja conectada%22)%0A            return%0A        self.__bateria = Bateria(capacidade)%0A%0A    def rmBateria(self):%0A        if not self.__bateria:%0A            print(%22fail: Sem bateria%22)%0A            return%0A        print(f%22Removido %7Bself.__bateria.getBateria()%7D%22)%0A        self.__bateria = None%0A        if not self.__carregador:%0A            self.__ligado = False%0A%0A    def setCarregador(self, potencia:int):%0A        if self.__carregador:%0A            print(%22fail: carregador j%C3%A1 conectado%22)%0A            return%0A        self.__carregador = Carregador(potencia)%0A    def rmCarregador(self):%0A        if not self.__carregador:%0A            print(%22fail: Sem carregador%22)%0A            return%0A        %0A        print(f%22Removido %7Bself.__carregador.getPotencia()%7DW%22)%0A        self.__carregador = None%0A        if not self.__bateria:%0A            self.__ligado = False%0A%0A    def usar(self, tempo: int):%0A        tempo = int(tempo)%0A        if not self.__ligado:%0A            print(%22fail: desligado%22)%0A            return%0A        self.__tempoUsado += tempo%0A        if self.__bateria and self.__carregador:%0A            self.__bateria.carregar(self.__carregador.getPotencia(),tempo)%0A           %0A        elif self.__bateria:%0A            carga_inicio = self.__bateria.getCarga()%0A            self.__bateria.usingBateria(tempo)%0A            if not self.__bateria.temCarga():%0A                print(%22fail: descarregou%22)%0A                self.__ligado = False%0A                self.__tempoUsado -= (tempo - carga_inicio)%0A        elif self.__carregador:%0A            pass%0A        else:%0A            print(%22fail: desligado%22)%0A            self.__ligado = False%0A%0A    def show(self):%0A        status = %22ligado%22 if self.__ligado else %22desligado%22%0A        %0A        texto = f%22Notebook: %7Bstatus%7D%22%0A        if self.__ligado:%0A            texto += f%22 por %7Bself.__tempoUsado%7D min%22%0A        imprimir = %5B%5D%0A        if self.__carregador:%0A            imprimir.append(f%22Carregador %7Bself.__carregador.getPotencia()%7DW%22)%0A        if self.__bateria:%0A            imprimir.append(f%22Bateria %7Bself.__bateria.getBateria()%7D%22)%0A        if imprimir:%0A            texto += %22, %22 + %22, %22 .join(imprimir)%0A        \n+ligado:%0A            return%0A        if (self.__bateria and self.__bateria.temCarga()) or self.__carregador:%0A            self.__ligado = True%0A        else:%0A            print(%22fail: n%C3%A3o foi poss%C3%ADvel ligar%22)%0A%0A    def desligar(self):%0A        if not self._ligado:%0A            print(%22fail: j%C3%A1 desligado%22)%0A            return%0A%0A    def usar(self, tempo: int):%0A        if not self.__ligado:%0A            print(%22fail: desligado%22)%0A            return%0A%0A        self.__tempoLigado += tempo%0A%0A        # Caso com bateria e carregador%0A        if self.__bateria and self.__carregador:%0A            self.__bateria.carregar(self.__carregador.getPotencia(), tempo)%0A            return%0A%0A        # Caso com apenas carregador%0A        if self.__carregador and not self.__bateria:%0A            return%0A%0A        # Caso com apenas bateria%0A        if self.__bateria and not self.__carregador:%0A            if self.__bateria.getCarga() %3E= tempo:%0A                self.__bateria.usar(tempo)%0A            else:%0A                print(%22fail: descarregou%22)%0A                self.__bateria.usar(tempo)%0A                self.__ligado = False%0A            return%0A%0A    def set_charger(self, carregador: Carregador):%0A        if self.__carregador:%0A            print(%22fail: carregador j%C3%A1 conectado%22)%0A            return%0A        self.__carregador = carregador%0A%0A    def rmBateria(self):%0A        if self.__carregador:%0A            print(f%22Removido %7Bself.__carregador%7D%22)%0A            self.__carregador = None%0A            if not (self.__bateria and self.__bateria.temCarga()):%0A                self.__ligado = False%0A        else:%0A            print(%22fail: Sem carregador%22)%0A%0A    def set_battery(self, bateria: Bateria):%0A        if self.__bateria:%0A            print(%22fail: bateria j%C3%A1 conectada%22)%0A            return%0A        self.__bateria = bateria%0A%0A    def rmBateria(self):%0A        if self.__bateria:%0A            print(f%22Removido %7Bself.__bateria%7D%22)%0A            self.__bateria = None%0A            if not self.__carregador:%0A                self.__ligado = False%0A        else:%0A            print(%22fail: Sem bateria%22)%0A%0A    def show(self):%0A        if self.__ligado:%0A            texto = f%22Notebook: ligado por %7Bself.__tempoLigado%7D min%22%0A        else:%0A            texto = %22Notebook: desligado%22%0A%0A        itens = %5B%5D%0A        if self.__carregador:%0A            itens.append(f%22Carregador %7Bself.__carregador%7D%22)%0A        if self.__bateria:%0A            itens.append(f%22Bateria %7Bself.__bateria%7D%22)%0A%0A        if itens:%0A            texto += %22, %22 + %22, %22.join(itens)%0A\n %0A   \n@@ -3608,16 +3608,17 @@\n ebook()%0A\n+%0A\n     whil\n@@ -3690,18 +3690,8 @@\n args\n-:list%5Bstr%5D\n  = l\n@@ -3704,11 +3704,8 @@\n lit(\n-%22 %22\n )%0A%0A \n@@ -3839,271 +3839,327 @@\n == %22\n-turn_on%22:%0A            notebook.ligar()%0A        elif args%5B0%5D == %22turn_off%22:%0A            notebook.desligar()%0A        elif args%5B0%5D == %22use%22:%0A            notebook.usar(int(args%5B1%5D))%0A        elif args%5B0%5D == %22set_charger%22:%0A            notebook.setCarregador(int(args%5B1%5D\n+ligar%22:%0A            notebook.ligar()%0A        elif args%5B0%5D == %22desligar%22:%0A            notebook.desligar()%0A        elif args%5B0%5D == %22use%22:%0A            tempo = int(args%5B1%5D)%0A            notebook.usar(tempo)%0A        elif args%5B0%5D == %22set_charger%22:%0A            pot = int(args%5B1%5D)%0A            notebook.set_charger(Carregador(pot\n ))%0A \n@@ -4218,25 +4218,23 @@\n ebook.rm\n-Carregado\n+_charge\n r()%0A    \n@@ -4284,174 +4284,148 @@\n     \n-notebook.setBateria(int(args%5B1%5D))%0A        elif args%5B0%5D == %22rm_battery%22:%0A            notebook.rmBateria()%0A        else:%0A            print(%22fail: comando invalido%22)%0A%0Amain()\n+cap = int(args%5B1%5D)%0A            notebook.set_battery(Bateria(cap))%0A        elif args%5B0%5D == %22rmBateria%22:%0A            notebook.rmBateria()%0A%0Amain()%0A\n",
            "lines": "159"
        },
        {
            "label": "2025-10-23_21-43-16",
            "content": "@@ -202,21 +202,16 @@\n idade%7D%22%0A\n-    %0A\n     def \n@@ -233,32 +233,32 @@\n lf, tempo:int):%0A\n+\n         self.__c\n@@ -329,17 +329,197 @@\n rga = 0%0A\n+    def carregar(self, potencia:int , tempo:int):%0A        self.__carga += potencia * tempo%0A        if self.__carga %3E self.__capacidade:%0A            self.__carga = self.__capacidade\n %0A\n-\n     def \n@@ -566,21 +566,16 @@\n rga %3E 0%0A\n-    %0A\n     def \n@@ -618,21 +618,16 @@\n __carga%0A\n-    %0A\n     def \n@@ -639,32 +639,32 @@\n pacidade(self):%0A\n+\n         return s\n@@ -689,194 +689,8 @@\n    %0A\n-    def carregar(self, potencia:int , tempo:int):%0A        self.__carga += potencia * tempo%0A        if self.__carga %3E self.__capacidade:%0A            self.__carga = self.__capacidade%0A    %0A\n     \n",
            "lines": "148"
        },
        {
            "label": "2025-10-23_21-44-35",
            "content": "@@ -217,17 +217,19 @@\n   def us\n-a\n+ing\n Bateria(\n@@ -2813,17 +2813,19 @@\n teria.us\n-a\n+ing\n Bateria(\n",
            "lines": "153"
        },
        {
            "label": "2025-10-23_21-45-47",
            "content": "@@ -1447,25 +1447,16 @@\n = False%0A\n-        %0A\n     def \n",
            "lines": "153"
        },
        {
            "label": "2025-10-23_21-45-56",
            "content": "class Bateria:\n    def __init__(self, capacidade: int):\n        self.__capacidade = capacidade\n        self.__carga = capacidade\n\n    def getBateria(self):\n        return f\"{self.__carga}/{self.__capacidade}\"\n    \n    def usaBateria(self, tempo:int):\n        self.__carga -= tempo\n        if self.__carga < 0:\n            self.__carga = 0\n\n    def temCarga(self):\n        return self.__carga > 0\n    \n    def getCarga(self):\n        return self.__carga\n    \n    def getCapacidade(self):\n        return self.__capacidade\n    \n    def carregar(self, potencia:int , tempo:int):\n        self.__carga += potencia * tempo\n        if self.__carga > self.__capacidade:\n            self.__carga = self.__capacidade\n    \n    \n\nclass Carregador:\n    def __init__(self, potencia:int):\n        self.__potencia = potencia\n    def getPotencia(self):\n        return self.__potencia\n    \nclass Notebook:\n    def __init__(self):\n        self.__ligado = False\n        self.__tempoUsado = 0\n        self.__bateria: Bateria | None = None\n        self.__carregador: Carregador | None = None\n\n    def ligar(self):\n        if self.__bateria and self.__bateria.temCarga():\n            self.__ligado = True\n        elif self.__carregador:\n            self.__ligado = True\n        else:\n            print(\"fail: n\u00e3o foi poss\u00edvel ligar\")\n\n    def desligar(self):\n        if not self.__ligado:\n            print(\"fail: j\u00e1 desligado\")\n            return\n        self.__ligado = False\n        \n    def setBateria(self, capacidade:int):\n        if self.__bateria:\n            print(\"fail: bateria ja conectada\")\n            return\n        self.__bateria = Bateria(capacidade)\n\n    def rmBateria(self):\n        if not self.__bateria:\n            print(\"fail: Sem bateria\")\n            return\n        print(f\"Removido {self.__bateria.getBateria()}\")\n        self.__bateria = None\n        if not self.__carregador:\n            self.__ligado = False\n\n    def setCarregador(self, potencia:int):\n        if self.__carregador:\n            print(\"fail: carregador j\u00e1 conectado\")\n            return\n        self.__carregador = Carregador(potencia)\n    def rmCarregador(self):\n        if not self.__carregador:\n            print(\"fail: Sem carregador\")\n            return\n        \n        print(f\"Removido {self.__carregador.getPotencia()}W\")\n        self.__carregador = None\n        if not self.__bateria:\n            self.__ligado = False\n\n    def usar(self, tempo: int):\n        tempo = int(tempo)\n        if not self.__ligado:\n            print(\"fail: desligado\")\n            return\n        self.__tempoUsado += tempo\n        if self.__bateria and self.__carregador:\n            self.__bateria.carregar(self.__carregador.getPotencia(),tempo)\n           \n        elif self.__bateria:\n            carga_inicio = self.__bateria.getCarga()\n            self.__bateria.usaBateria(tempo)\n            if not self.__bateria.temCarga():\n                print(\"fail: descarregou\")\n                self.__ligado = False\n                self.__tempoUsado -= (tempo - carga_inicio)\n        elif self.__carregador:\n            pass\n        else:\n            print(\"fail: desligado\")\n            self.__ligado = False\n\n    def show(self):\n        status = \"ligado\" if self.__ligado else \"desligado\"\n        \n        texto = f\"Notebook: {status}\"\n        if self.__ligado:\n            texto += f\" por {self.__tempoUsado} min\"\n        imprimir = []\n        if self.__carregador:\n            imprimir.append(f\"Carregador {self.__carregador.getPotencia()}W\")\n        if self.__bateria:\n            imprimir.append(f\"Bateria {self.__bateria.getBateria()}\")\n        if imprimir:\n            texto += \", \" + \", \" .join(imprimir)\n        \n        print(texto)\n\n\ndef main():\n    notebook = Notebook()\n    while True:\n        line = input()\n        print(\"$\" + line)\n        args:list[str] = line.split(\" \")\n\n        if args[0] == \"end\":\n            break\n        elif args[0] == \"show\":\n            notebook.show()\n        elif args[0] == \"turn_on\":\n            notebook.ligar()\n        elif args[0] == \"turn_off\":\n            notebook.desligar()\n        elif args[0] == \"use\":\n            notebook.usar(int(args[1]))\n        elif args[0] == \"set_charger\":\n            notebook.setCarregador(int(args[1]))\n        elif args[0] == \"rm_charger\":\n            notebook.rmCarregador()\n        elif args[0] == \"set_battery\":\n            notebook.setBateria(int(args[1]))\n        elif args[0] == \"rm_battery\":\n            notebook.rmBateria()\n        else:\n            print(\"fail: comando invalido\")\n\nmain()",
            "lines": "154"
        }
    ]
}